import { __decorate, __read, __spread } from "tslib";
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { dismissOnDestroyToken, fireOnInitToken, swalProviderToken } from './di';
import { SwalPortalComponent } from './swal-portal.component';
import { SwalPortalDirective } from './swal-portal.directive';
import { SwalComponent } from './swal.component';
import { SwalDirective } from './swal.directive';
import { SweetAlert2LoaderService } from './sweetalert2-loader.service';
export function provideDefaultSwal() {
    return import('sweetalert2');
}
var SweetAlert2Module = /** @class */ (function () {
    function SweetAlert2Module() {
    }
    SweetAlert2Module_1 = SweetAlert2Module;
    SweetAlert2Module.forRoot = function (options) {
        if (options === void 0) { options = {}; }
        return {
            ngModule: SweetAlert2Module_1,
            providers: [
                SweetAlert2LoaderService,
                { provide: swalProviderToken, useValue: options.provideSwal || provideDefaultSwal },
                { provide: fireOnInitToken, useValue: options.fireOnInit || false },
                { provide: dismissOnDestroyToken, useValue: options.dismissOnDestroy || true }
            ]
        };
    };
    SweetAlert2Module.forChild = function (options) {
        if (options === void 0) { options = {}; }
        return {
            ngModule: SweetAlert2Module_1,
            providers: __spread(options.provideSwal ? [
                SweetAlert2LoaderService,
                { provide: swalProviderToken, useValue: options.provideSwal }
            ] : [], options.fireOnInit !== undefined ? [
                { provide: fireOnInitToken, useValue: options.fireOnInit }
            ] : [], options.dismissOnDestroy !== undefined ? [
                { provide: dismissOnDestroyToken, useValue: options.dismissOnDestroy }
            ] : [])
        };
    };
    var SweetAlert2Module_1;
    SweetAlert2Module = SweetAlert2Module_1 = __decorate([
        NgModule({
            declarations: [
                SwalDirective, SwalComponent, SwalPortalDirective, SwalPortalComponent
            ],
            imports: [
                CommonModule
            ],
            exports: [
                SwalComponent, SwalPortalDirective, SwalDirective
            ],
            entryComponents: [
                SwalComponent, SwalPortalComponent
            ]
        })
    ], SweetAlert2Module);
    return SweetAlert2Module;
}());
export { SweetAlert2Module };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3dlZXRhbGVydDIubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHN3ZWV0YWxlcnQyL25neC1zd2VldGFsZXJ0Mi8iLCJzb3VyY2VzIjpbImxpYi9zd2VldGFsZXJ0Mi5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQXVCLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsZUFBZSxFQUFFLGlCQUFpQixFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQ2pGLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQzlELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQzlELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNqRCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDakQsT0FBTyxFQUFnQix3QkFBd0IsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBUXRGLE1BQU0sVUFBVSxrQkFBa0I7SUFDOUIsT0FBTyxNQUFNLENBQUMsYUFBYSxDQUFDLENBQUM7QUFDakMsQ0FBQztBQWdCRDtJQUFBO0lBOEJBLENBQUM7MEJBOUJZLGlCQUFpQjtJQUNaLHlCQUFPLEdBQXJCLFVBQXNCLE9BQXFDO1FBQXJDLHdCQUFBLEVBQUEsWUFBcUM7UUFDdkQsT0FBTztZQUNILFFBQVEsRUFBRSxtQkFBaUI7WUFDM0IsU0FBUyxFQUFFO2dCQUNQLHdCQUF3QjtnQkFDeEIsRUFBRSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsUUFBUSxFQUFFLE9BQU8sQ0FBQyxXQUFXLElBQUksa0JBQWtCLEVBQUU7Z0JBQ25GLEVBQUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxRQUFRLEVBQUUsT0FBTyxDQUFDLFVBQVUsSUFBSSxLQUFLLEVBQUU7Z0JBQ25FLEVBQUUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLFFBQVEsRUFBRSxPQUFPLENBQUMsZ0JBQWdCLElBQUksSUFBSSxFQUFFO2FBQ2pGO1NBQ0osQ0FBQztJQUNOLENBQUM7SUFFYSwwQkFBUSxHQUF0QixVQUF1QixPQUFxQztRQUFyQyx3QkFBQSxFQUFBLFlBQXFDO1FBQ3hELE9BQU87WUFDSCxRQUFRLEVBQUUsbUJBQWlCO1lBQzNCLFNBQVMsV0FDRixPQUFPLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQztnQkFDckIsd0JBQXdCO2dCQUN4QixFQUFFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxRQUFRLEVBQUUsT0FBTyxDQUFDLFdBQVcsRUFBRTthQUNoRSxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQ0gsT0FBTyxDQUFDLFVBQVUsS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDO2dCQUNsQyxFQUFFLE9BQU8sRUFBRSxlQUFlLEVBQUUsUUFBUSxFQUFFLE9BQU8sQ0FBQyxVQUFVLEVBQUU7YUFDN0QsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUNILE9BQU8sQ0FBQyxnQkFBZ0IsS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDO2dCQUN4QyxFQUFFLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxRQUFRLEVBQUUsT0FBTyxDQUFDLGdCQUFnQixFQUFFO2FBQ3pFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FDVDtTQUNKLENBQUM7SUFDTixDQUFDOztJQTdCUSxpQkFBaUI7UUFkN0IsUUFBUSxDQUFDO1lBQ04sWUFBWSxFQUFFO2dCQUNWLGFBQWEsRUFBRSxhQUFhLEVBQUUsbUJBQW1CLEVBQUUsbUJBQW1CO2FBQ3pFO1lBQ0QsT0FBTyxFQUFFO2dCQUNMLFlBQVk7YUFDZjtZQUNELE9BQU8sRUFBRTtnQkFDTCxhQUFhLEVBQUUsbUJBQW1CLEVBQUUsYUFBYTthQUNwRDtZQUNELGVBQWUsRUFBRTtnQkFDYixhQUFhLEVBQUUsbUJBQW1CO2FBQ3JDO1NBQ0osQ0FBQztPQUNXLGlCQUFpQixDQThCN0I7SUFBRCx3QkFBQztDQUFBLEFBOUJELElBOEJDO1NBOUJZLGlCQUFpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBNb2R1bGVXaXRoUHJvdmlkZXJzLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgZGlzbWlzc09uRGVzdHJveVRva2VuLCBmaXJlT25Jbml0VG9rZW4sIHN3YWxQcm92aWRlclRva2VuIH0gZnJvbSAnLi9kaSc7XG5pbXBvcnQgeyBTd2FsUG9ydGFsQ29tcG9uZW50IH0gZnJvbSAnLi9zd2FsLXBvcnRhbC5jb21wb25lbnQnO1xuaW1wb3J0IHsgU3dhbFBvcnRhbERpcmVjdGl2ZSB9IGZyb20gJy4vc3dhbC1wb3J0YWwuZGlyZWN0aXZlJztcbmltcG9ydCB7IFN3YWxDb21wb25lbnQgfSBmcm9tICcuL3N3YWwuY29tcG9uZW50JztcbmltcG9ydCB7IFN3YWxEaXJlY3RpdmUgfSBmcm9tICcuL3N3YWwuZGlyZWN0aXZlJztcbmltcG9ydCB7IFN3YWxQcm92aWRlciwgU3dlZXRBbGVydDJMb2FkZXJTZXJ2aWNlIH0gZnJvbSAnLi9zd2VldGFsZXJ0Mi1sb2FkZXIuc2VydmljZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3dlZXRhbGVydDJNb2R1bGVDb25maWcge1xuICAgIHByb3ZpZGVTd2FsPzogU3dhbFByb3ZpZGVyO1xuICAgIGZpcmVPbkluaXQ/OiBib29sZWFuO1xuICAgIGRpc21pc3NPbkRlc3Ryb3k/OiBib29sZWFuO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcHJvdmlkZURlZmF1bHRTd2FsKCkge1xuICAgIHJldHVybiBpbXBvcnQoJ3N3ZWV0YWxlcnQyJyk7XG59XG5cbkBOZ01vZHVsZSh7XG4gICAgZGVjbGFyYXRpb25zOiBbXG4gICAgICAgIFN3YWxEaXJlY3RpdmUsIFN3YWxDb21wb25lbnQsIFN3YWxQb3J0YWxEaXJlY3RpdmUsIFN3YWxQb3J0YWxDb21wb25lbnRcbiAgICBdLFxuICAgIGltcG9ydHM6IFtcbiAgICAgICAgQ29tbW9uTW9kdWxlXG4gICAgXSxcbiAgICBleHBvcnRzOiBbXG4gICAgICAgIFN3YWxDb21wb25lbnQsIFN3YWxQb3J0YWxEaXJlY3RpdmUsIFN3YWxEaXJlY3RpdmVcbiAgICBdLFxuICAgIGVudHJ5Q29tcG9uZW50czogW1xuICAgICAgICBTd2FsQ29tcG9uZW50LCBTd2FsUG9ydGFsQ29tcG9uZW50XG4gICAgXVxufSlcbmV4cG9ydCBjbGFzcyBTd2VldEFsZXJ0Mk1vZHVsZSB7XG4gICAgcHVibGljIHN0YXRpYyBmb3JSb290KG9wdGlvbnM6IFN3ZWV0YWxlcnQyTW9kdWxlQ29uZmlnID0ge30pOiBNb2R1bGVXaXRoUHJvdmlkZXJzPFN3ZWV0QWxlcnQyTW9kdWxlPiB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBuZ01vZHVsZTogU3dlZXRBbGVydDJNb2R1bGUsXG4gICAgICAgICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgICAgICAgICBTd2VldEFsZXJ0MkxvYWRlclNlcnZpY2UsXG4gICAgICAgICAgICAgICAgeyBwcm92aWRlOiBzd2FsUHJvdmlkZXJUb2tlbiwgdXNlVmFsdWU6IG9wdGlvbnMucHJvdmlkZVN3YWwgfHwgcHJvdmlkZURlZmF1bHRTd2FsIH0sXG4gICAgICAgICAgICAgICAgeyBwcm92aWRlOiBmaXJlT25Jbml0VG9rZW4sIHVzZVZhbHVlOiBvcHRpb25zLmZpcmVPbkluaXQgfHwgZmFsc2UgfSxcbiAgICAgICAgICAgICAgICB7IHByb3ZpZGU6IGRpc21pc3NPbkRlc3Ryb3lUb2tlbiwgdXNlVmFsdWU6IG9wdGlvbnMuZGlzbWlzc09uRGVzdHJveSB8fCB0cnVlIH1cbiAgICAgICAgICAgIF1cbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc3RhdGljIGZvckNoaWxkKG9wdGlvbnM6IFN3ZWV0YWxlcnQyTW9kdWxlQ29uZmlnID0ge30pOiBNb2R1bGVXaXRoUHJvdmlkZXJzPFN3ZWV0QWxlcnQyTW9kdWxlPiB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBuZ01vZHVsZTogU3dlZXRBbGVydDJNb2R1bGUsXG4gICAgICAgICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgICAgICAgICAuLi5vcHRpb25zLnByb3ZpZGVTd2FsID8gW1xuICAgICAgICAgICAgICAgICAgICBTd2VldEFsZXJ0MkxvYWRlclNlcnZpY2UsXG4gICAgICAgICAgICAgICAgICAgIHsgcHJvdmlkZTogc3dhbFByb3ZpZGVyVG9rZW4sIHVzZVZhbHVlOiBvcHRpb25zLnByb3ZpZGVTd2FsIH1cbiAgICAgICAgICAgICAgICBdIDogW10sXG4gICAgICAgICAgICAgICAgLi4ub3B0aW9ucy5maXJlT25Jbml0ICE9PSB1bmRlZmluZWQgPyBbXG4gICAgICAgICAgICAgICAgICAgIHsgcHJvdmlkZTogZmlyZU9uSW5pdFRva2VuLCB1c2VWYWx1ZTogb3B0aW9ucy5maXJlT25Jbml0IH1cbiAgICAgICAgICAgICAgICBdIDogW10sXG4gICAgICAgICAgICAgICAgLi4ub3B0aW9ucy5kaXNtaXNzT25EZXN0cm95ICE9PSB1bmRlZmluZWQgPyBbXG4gICAgICAgICAgICAgICAgICAgIHsgcHJvdmlkZTogZGlzbWlzc09uRGVzdHJveVRva2VuLCB1c2VWYWx1ZTogb3B0aW9ucy5kaXNtaXNzT25EZXN0cm95IH1cbiAgICAgICAgICAgICAgICBdIDogW11cbiAgICAgICAgICAgIF1cbiAgICAgICAgfTtcbiAgICB9XG59XG4iXX0=