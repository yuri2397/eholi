import { AfterViewInit, ElementRef, EventEmitter, NgZone, OnChanges, OnDestroy, Renderer2, SimpleChange } from '@angular/core';
import * as Plyr from 'plyr';
import { PlyrDriver } from '../plyr-driver/plyr-driver';
export declare class PlyrComponent implements AfterViewInit, OnChanges, OnDestroy {
    private elementRef;
    private ngZone;
    private renderer;
    private playerChange;
    get player(): Plyr;
    private events;
    plyrDriver: PlyrDriver;
    plyrType: Plyr.MediaType;
    plyrTitle: string;
    plyrPoster: string;
    plyrSources: Plyr.Source[];
    plyrTracks: Plyr.Track[];
    plyrOptions: Plyr.Options;
    plyrCrossOrigin: boolean;
    plyrPlaysInline: boolean;
    private vr;
    plyrInit: EventEmitter<Plyr>;
    plyrProgress: EventEmitter<Plyr.PlyrEvent>;
    plyrPlaying: EventEmitter<Plyr.PlyrEvent>;
    plyrPlay: EventEmitter<Plyr.PlyrEvent>;
    plyrPause: EventEmitter<Plyr.PlyrEvent>;
    plyrTimeUpdate: EventEmitter<Plyr.PlyrEvent>;
    plyrVolumeChange: EventEmitter<Plyr.PlyrEvent>;
    plyrSeeking: EventEmitter<Plyr.PlyrEvent>;
    plyrSeeked: EventEmitter<Plyr.PlyrEvent>;
    plyrRateChange: EventEmitter<Plyr.PlyrEvent>;
    plyrEnded: EventEmitter<Plyr.PlyrEvent>;
    plyrEnterFullScreen: EventEmitter<Plyr.PlyrEvent>;
    plyrExitFullScreen: EventEmitter<Plyr.PlyrEvent>;
    plyrCaptionsEnabled: EventEmitter<Plyr.PlyrEvent>;
    plyrCaptionsDisabled: EventEmitter<Plyr.PlyrEvent>;
    plyrLanguageChange: EventEmitter<Plyr.PlyrEvent>;
    plyrControlsHidden: EventEmitter<Plyr.PlyrEvent>;
    plyrControlsShown: EventEmitter<Plyr.PlyrEvent>;
    plyrReady: EventEmitter<Plyr.PlyrEvent>;
    plyrLoadStart: EventEmitter<Plyr.PlyrEvent>;
    plyrLoadedData: EventEmitter<Plyr.PlyrEvent>;
    plyrLoadedMetadata: EventEmitter<Plyr.PlyrEvent>;
    plyrQualityChange: EventEmitter<Plyr.PlyrEvent>;
    plyrCanPlay: EventEmitter<Plyr.PlyrEvent>;
    plyrCanPlayThrough: EventEmitter<Plyr.PlyrEvent>;
    plyrStalled: EventEmitter<Plyr.PlyrEvent>;
    plyrWaiting: EventEmitter<Plyr.PlyrEvent>;
    plyrEmptied: EventEmitter<Plyr.PlyrEvent>;
    plyrCueChange: EventEmitter<Plyr.PlyrEvent>;
    plyrError: EventEmitter<Plyr.PlyrEvent>;
    plyrStateChange: EventEmitter<Plyr.PlyrEvent>;
    private subscriptions;
    private driver;
    private videoElement;
    constructor(elementRef: ElementRef<HTMLDivElement>, ngZone: NgZone, renderer: Renderer2);
    ngOnChanges(changes: {
        [p in keyof PlyrComponent]?: SimpleChange;
    }): void;
    ngOnDestroy(): void;
    ngAfterViewInit(): void;
    private initPlyr;
    private updatePlyrSource;
    private createLazyEvent;
    private destroyPlayer;
    private get hostElement();
    private ensureVideoElement;
    private on;
    private off;
}
